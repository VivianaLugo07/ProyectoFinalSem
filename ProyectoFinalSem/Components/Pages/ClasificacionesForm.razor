@page "/clasificaciones/nueva"
@page "/clasificaciones/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigationManager
@inject IRepositorioClasificaciones _repositorioClasificaciones

<PageTitle>Clasificaciones</PageTitle>

<h3>@_mensaje Clasificación</h3>

<EditForm Model="_clasificacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3 row">
        <label for="txtNombre" class="col-sm-2 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="txtNombre" @bind-Value="_clasificacion.Nombre" />
            <ValidationMessage For="@(() => _clasificacion.Nombre)" />
        </div>
    </div>

    <div class="row">
        <div class="col-sm-10 offset-sm-2">
            <button type="submit" class="btn btn-primary">Guardar</button>
            <a class="btn btn-danger ms-2" href="/clasificaciones">Cancelar</a>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private Clasificacion _clasificacion = new();
    private string _mensaje = "Nueva";

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            var existente = await _repositorioClasificaciones.Get(Id);
            if (existente != null)
            {
                _clasificacion = existente;
                _mensaje = "Modificar";
            }
        }
    }

    private async Task Guardar()
    {
        if (Id > 0)
        {
            await _repositorioClasificaciones.Update(Id, _clasificacion);
        }
        else
        {
            await _repositorioClasificaciones.Add(_clasificacion);
        }

        _navigationManager.NavigateTo("/clasificaciones");
    }
}
